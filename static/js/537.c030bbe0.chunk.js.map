{"version":3,"file":"static/js/537.c030bbe0.chunk.js","mappings":"8LAAA,IAAMA,EAAU,mCACVC,EAAY,iC,uJCMlBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzB,I,EAAMC,EAAU,mCAAG,WAAOC,GAAP,kGAGOF,EAAAA,EAAAA,IAAA,gBAAmBE,EAAnB,YATR,UASQ,oBAAsDJ,EAAAA,EAAtD,qBART,UAKE,cAGLK,EAHK,OAILC,EAAeD,EAAIE,KAJd,kBAKJD,GALI,gCAOXE,QAAQC,IAAI,2BAA4B,KAAMC,SAPnC,iEAAH,sD,SCShB,E,QAjBsBC,GAAAA,IAAH,2S,SC2CnB,EAtCgB,WACZ,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAENb,EAAWC,GACNa,MAAK,SAAAV,GAEEQ,EAAeR,EAAKW,SACpBV,QAAQC,IAAIK,EAAYK,QAAS,UAEzC,GAEP,GAAC,IACNX,QAAQC,IAAIK,IAEJ,SAAC,EAAD,WACI,wBAC4B,IAAvBA,EAAYM,QAEL,wBAAI,6DAENN,EAAYO,KAAI,SAACC,EAAQC,GAAT,OACd,2BACI,wBAAI,YACJ,uBAAID,EAAOE,UACX,wBAAI,YACJ,wBAAKF,EAAOH,YAJPI,EADK,OAarC,C","sources":["API/api-params.js","API/get-reviews.js","components/Reviews/styled-reviews.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const KEY_API = 'cc8aceddc1acb4be5d6024b16563f8b2';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport { KEY_API, IMAGE_URL};","import axios from \"axios\";\n\nimport { KEY_API } from \"./api-params\";\n\nconst REVIEWS_PATH = `reviews`;\nconst language = 'en-US';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nconst getReviews = async (movieID) => {\n    \n    try {\n        const res = await axios.get(`movie/${movieID}/${REVIEWS_PATH}?api_key=${KEY_API}&language=${language}`);\n        const movieReviews = res.data\n        return movieReviews;\n    } catch (error) {\n        console.log('Something wrong with API', error.message);\n    };\n};\n\nexport { getReviews }","import styled from \"styled-components\";\n\nconst StyledReviews = styled.div`\n    margin: 0 20px;\n    li {\n        margin-bottom: 10px;\n    }\n    h5 {\n        padding-bottom: 5px;\n        color: grey;\n        border-bottom: .5px solid #4FB3F3;\n    }\n    p{\n        margin-bottom: 5px;\n        font-size: 14px;\n        color: grey;\n    }\n\n`\nexport default StyledReviews;","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nimport { getReviews } from \"API/get-reviews\";\n\nimport StyledReviews from \"./styled-reviews\";\n\nconst Reviews = () => {\n    const { movieID } = useParams();\n    const [reviewsData, setReviewsData] = useState([]);\n\n    useEffect(() => {\n        let mounted = true\n        getReviews(movieID)\n            .then(data => {\n                if (mounted) {\n                    setReviewsData(data.results);\n                    console.log(reviewsData.content, 'reviews');\n               }\n           })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\nconsole.log(reviewsData);\n    return (\n        <StyledReviews>\n            <ul>\n                {reviewsData.length === 0\n                    ? (\n                        <li>There are no reviews in the TMDB database for this film.</li>\n                    )\n                    : reviewsData.map((review, idx) => (\n                        <li key={idx}>\n                            <h4>Author</h4>\n                            <p>{review.author}</p>\n                            <h4>Review</h4>\n                            <h5>{review.content}</h5>\n                        </li>\n                    \n                ))\n                }\n            </ul>\n        </StyledReviews>\n    );\n};\n\nexport default Reviews;"],"names":["KEY_API","IMAGE_URL","axios","getReviews","movieID","res","movieReviews","data","console","log","message","styled","useParams","useState","reviewsData","setReviewsData","useEffect","then","results","content","length","map","review","idx","author"],"sourceRoot":""}