{"version":3,"file":"static/js/177.2e9b4753.chunk.js","mappings":"8LAAA,IAAMA,EAAU,mCACVC,EAAY,iC,uJCIlBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzB,I,IAAMC,EAAS,mCAAG,WAAOC,GAAP,oGAEaF,EAAAA,EAAAA,IAAA,UAPX,eAOW,oBAAoCF,EAAAA,EAApC,kBAAqDI,EAArD,qBANd,QAMc,yBAFb,uBAEFC,EAFE,EAEFA,KACFC,EAAeD,EAAKE,QAHhB,kBAIHD,GAJG,gCAMVE,QAAQC,IAAI,2BAA4B,KAAMC,SANpC,iEAAH,sD,6BC4Cf,EAjDmBC,EAAAA,GAAAA,KAAH,k4C,+zSCqChB,EAlCkB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMX,EAAQU,EAAaE,IAAI,UAAY,GACrCC,GAAMC,EAAAA,EAAAA,MAYZ,OADJV,QAAQC,IAAIL,EAAO,UAEX,0BACI,UAAC,EAAD,CAAYQ,SAZC,SAACO,GAClBA,EAAEC,iBACY,KAAVhB,IAGJQ,EAASR,GACTa,EAAI,iBAAD,OAAkBb,IACxB,EAKO,WACI,kBACIiB,KAAK,OACLC,YAAY,eACZC,MAAOnB,EACPoB,SAAU,SAAAL,GAAC,OAAIJ,EAAgB,CAAEX,MAAOe,EAAEM,OAAOF,OAAtC,KAEf,mBAAQ,aAAW,SAAQF,KAAK,eAI/C,ECkBD,EAlDoBV,EAAAA,GAAAA,IAAH,62BCwDjB,EAjDe,WACX,OAAuBE,EAAAA,EAAAA,MACjBT,GADN,eAC2BY,IAAI,UAAY,GAC3C,GAAoCU,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAiBA,OATEtB,QAAQC,IAAIkB,IACdI,EAAAA,EAAAA,YAAU,WACN,MAAc,KAAV3B,OAAc,EAEP0B,EAAU1B,EAExB,GAAE,CAACA,KAIA,UAAC,EAAD,YACI,wBAAI,kBACJ,SAAC,EAAD,CAAWQ,SAlBE,WAChBT,EAAU0B,GACNG,MAAK,SAAA3B,GACFuB,EAAcvB,EACjB,GACR,KAcO,wBACKsB,EAAWM,KAAI,SAAC5B,EAAM6B,GAAP,OACZ,SAAC,KAAD,CAAMC,GAAE,YAAO9B,EAAK+B,IAApB,UACI,2BACI,gBAAKC,IAAMhC,EAAKiC,YACVrC,EAAAA,EAAYI,EAAKiC,YAClB,4FAEDC,IAAKlC,EAAKmC,MAAQnC,EAAKmC,MAAQ,uBAEnC,wBAAKnC,EAAKmC,SACV,yBAAMnC,EAAKoC,aACD,IAAIC,KAAKrC,EAAKoC,cAAcE,cAC5B,YAXaT,EADnB,QAqB/B,C","sources":["API/api-params.js","API/get-search.js","components/MovieForm/styled-movie-form.js","components/MovieForm/MovieForm.jsx","pages/Movies/styled-movies.js","pages/Movies/Movies.jsx"],"sourcesContent":["const KEY_API = 'cc8aceddc1acb4be5d6024b16563f8b2';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport { KEY_API, IMAGE_URL};","import axios from \"axios\";\nimport { KEY_API } from \"./api-params\";\n\nconst SEARCH_PATH = 'search/movie';\nconst language = 'en-US';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nconst getSearch = async (query) => {\n    try {\n        const { data } = await axios.get(`${SEARCH_PATH}?api_key=${KEY_API}&query=${query}&language=${language}&include_adult=false`);\n        const searchMovies = data.results\n        return searchMovies;\n    } catch (error) {\n        console.log('Something wrong with API', error.message);\n    };\n};\n\nexport { getSearch}","import styled from 'styled-components';\n\nimport Background from '../../images/search.png'\nconst StyledForm = styled.form`\n    display: flex;\n    margin: 0 0 15px 0;\n\n    input {\n        padding: 10px 10px 0 5px;\n        font-size: 16px;\n        border: none;\n        border-bottom: 1px solid #4FB3F3;\n        background: transparent;\n        transition: box-shadow, .9s;\n        &:hover,\n        &:focus{\n            border-bottom: 1px solid transparent;\n            outline: none;\n            box-shadow: \n                rgba(240, 46, 170, 0.4) 0px 5px, \n                rgba(240, 46, 170, 0.3) 0px 10px, \n                rgba(240, 46, 170, 0.2) 0px 15px,\n                rgba(240, 46, 170, 0.1) 0px 20px,\n     rgba(240, 46, 170, 0.05) 0px 25px;\n        }\n    }\n\n    button {\n        padding: 15px;\n        font-size: 10px;\n        background: transparent;\n        border: 1px solid transparent;\n        border-bottom: 1px solid #4FB3F3;\n        background-image: url(${Background});\n        background-size: 25px 25px;\n        background-repeat: no-repeat;\n        background-position: center;\n        transition: box-shadow, .9s;\n        &:hover,\n        &:focus{\n            box-shadow: \n                rgba(240, 46, 170, 0.4) 0px 5px, \n                rgba(240, 46, 170, 0.3) 0px 10px, \n                rgba(240, 46, 170, 0.2) 0px 15px,\n                rgba(240, 46, 170, 0.1) 0px 20px,\n             rgba(240, 46, 170, 0.05) 0px 25px;\n            }\n        }\n    }\n\n`;\n\nexport default StyledForm;","\nimport { func } from 'prop-types';\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\n\nimport StyledForm from './styled-movie-form';\n\nconst MovieForm = ({onSubmit}) => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') || '';\n    const nav = useNavigate();\n  \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query === \"\") {\n            return;\n        }\n        onSubmit(query);\n        nav(`/movies?query=${query}`)\n    };\n\nconsole.log(query, 'query');\n    return (\n        <div>\n            <StyledForm onSubmit={handleSubmit}>\n                <input\n                    type='text'\n                    placeholder='movie search'\n                    value={query}\n                    onChange={e => setSearchParams({ query: e.target.value })}\n                />\n                <button aria-label='search'type='submit'></button>\n            </StyledForm>\n        </div>\n    );\n};\n\nMovieForm.propTypes = {\n    onSubmit: func.isRequired,\n};\n\nexport default MovieForm;\n\n","import styled from \"styled-components\";\n\nconst StyledMovie = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 20px;\n\n    h1 {\n        position: absolute;\n        left: -10000px;\n        width: 1px;\n        height: 1px;\n        overflow: hidden;\n    }\n\n    ul {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        gap: 10px;\n        margin-top: 20px;\n        \n    }\n    \n    li {\n        width: 140px;\n        height: 340px;\n        background-color: white;\n    }\n\n    img {\n        width: 140px;\n        height: auto;\n        margin-bottom: 5px;\n    }\n\n    h3 {\n        //margin-bottom: 5px;\n        padding: 0 5px;\n        font-size: 16px;\n        font-weight: 500;\n    }\n\n    div{\n        font-size: 14px;\n        color: #E14FF3;\n        padding: 0 5px;\n    }\n`;\n\nexport default StyledMovie;","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\n\nimport { IMAGE_URL } from \"API/api-params\";\n\nimport { getSearch } from \"API/get-search\";\nimport MovieForm from \"components/MovieForm/MovieForm\";\nimport StyledMovie from \"./styled-movies\";\n\nconst Movies = () => {\n    const [searchParams] = useSearchParams();\n    const query = searchParams.get('query') || '';\n    const [searchData, setSearchData] = useState([]);\n    const [search, setSearch] = useState('');\n    \n    const handleSubmit = () => {\n         getSearch(search)\n            .then(data => {\n                setSearchData(data)\n            })\n    };\n      console.log(searchData);\n    useEffect(() => {\n        if (query === '') return;\n        else {\n            return setSearch(query);\n        };\n    }, [query]);\n\n\n    return (\n        <StyledMovie>\n            <h1>Movie Search</h1>\n            <MovieForm onSubmit={handleSubmit} />\n            <ul>\n                {searchData.map((data, idx) => (\n                    <Link to={`./${data.id}`} key={idx}>\n                        <li>\n                            <img src={ data.poster_path\n                                ? IMAGE_URL + data.poster_path\n                                :'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n                                }\n                                alt={data.title ? data.title : 'Title coming soon'}\n                            />\n                            <h3>{data.title}</h3>\n                            <div>{data.release_date\n                                    ? new Date(data.release_date).getFullYear()\n                                    : '---'\n                                }\n                            </div>\n                        </li>\n                    </Link>\n                ))}\n            </ul>\n        </StyledMovie>\n    );\n};\n\nexport default Movies;"],"names":["KEY_API","IMAGE_URL","axios","getSearch","query","data","searchMovies","results","console","log","message","styled","onSubmit","useSearchParams","searchParams","setSearchParams","get","nav","useNavigate","e","preventDefault","type","placeholder","value","onChange","target","useState","searchData","setSearchData","search","setSearch","useEffect","then","map","idx","to","id","src","poster_path","alt","title","release_date","Date","getFullYear"],"sourceRoot":""}