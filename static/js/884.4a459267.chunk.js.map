{"version":3,"file":"static/js/884.4a459267.chunk.js","mappings":"8LAAA,IAAMA,EAAU,mCACVC,EAAY,iC,uJCIlBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzB,IAAMC,EAAS,mCAAG,WAAOC,GAAP,oGAEaF,EAAAA,EAAAA,IAAA,UAPX,eAOW,oBAAoCF,EAAAA,EAApC,kBAAqDI,EAArD,qBANd,QAMc,yBAFb,uBAEFC,EAFE,EAEFA,KACFC,EAAeD,EAAKE,QAC1BC,QAAQC,IAAIH,EAAc,YAJhB,kBAKHA,GALG,kCAOVE,QAAQC,IAAI,2BAA4B,KAAMC,SAPpC,kEAAH,sD,mBCgCf,EAnCkB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMV,EAAQS,EAAaE,IAAI,UAAY,GACrCC,GAAMC,EAAAA,EAAAA,MAcZ,OADJT,QAAQC,IAAIL,EAAO,UAEX,0BACI,kBAAMO,SAdO,SAACO,GAClBA,EAAEC,iBACY,KAAVf,GAIJO,EAASP,GACTY,EAAI,iBAAD,OAAkBZ,IACrBI,QAAQC,IAAI,kBALRD,QAAQC,IAAI,QAMnB,EAKO,WACI,kBACIW,KAAK,OACLC,MAAOjB,EACPkB,SAAU,SAAAJ,GAAC,OAAIJ,EAAgB,CAAEV,MAAOc,EAAEK,OAAOF,OAAtC,KAEf,mBAAQD,KAAK,SAAb,SAAsB,eAIrC,ECSD,EArCe,WACX,OAAuBR,EAAAA,EAAAA,MACjBR,GADN,eAC2BW,IAAI,UAAY,GAC3C,GAAoCS,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAoBA,OAVApB,QAAQC,IAAIL,EAAO,UAEnByB,EAAAA,EAAAA,YAAU,WACN,MAAc,KAAVzB,OAAc,EAEPwB,EAAUxB,EAExB,GAAE,CAACA,KAIA,4BACI,wBAAI,kBACJ,SAAC,EAAD,CAAWO,SArBE,WAChBR,EAAUwB,GACNG,MAAK,SAAAzB,GACFqB,EAAcrB,EACjB,IACLG,QAAQC,IAAIgB,EAAY,SAC3B,IAgBQA,EAAWM,KAAI,SAAC1B,GAAD,OAEhB,SAAC,KAAD,CAAM2B,GAAE,YAAO3B,EAAK4B,IAApB,UAA0C,wBAAM5B,EAAK6B,SAArB7B,EAAK4B,GAFrB,MAO3B,C","sources":["API/api-params.js","API/get-search.js","components/MovieForm/MovieForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["const KEY_API = 'cc8aceddc1acb4be5d6024b16563f8b2';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nexport { KEY_API, IMAGE_URL};","import axios from \"axios\";\nimport { KEY_API } from \"./api-params\";\n\nconst SEARCH_PATH = 'search/movie';\nconst language = 'en-US';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nconst getSearch = async (query) => {\n    try {\n        const { data } = await axios.get(`${SEARCH_PATH}?api_key=${KEY_API}&query=${query}&language=${language}&include_adult=false`);\n        const searchMovies = data.results\n        console.log(searchMovies, \"variable\");\n        return searchMovies;\n    } catch (error) {\n        console.log('Something wrong with API', error.message);\n    };\n};\n\nexport { getSearch}","\nimport { func } from 'prop-types';\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\n\n\nconst MovieForm = ({onSubmit}) => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') || '';\n    const nav = useNavigate();\n  \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query === \"\") {\n            console.log('empty');\n            return;\n        }\n        onSubmit(query);\n        nav(`/movies?query=${query}`)\n        console.log('Beauty noting');\n    };\n\nconsole.log(query, 'query');\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type='text'\n                    value={query}\n                    onChange={e => setSearchParams({ query: e.target.value })}\n                />\n                <button type='submit'>Search</button>\n            </form>\n        </div>\n    );\n};\n\nMovieForm.propTypes = {\n    onSubmit: func.isRequired,\n};\n\nexport default MovieForm;\n\n","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\n\nimport { getSearch } from \"API/get-search\";\nimport MovieForm from \"components/MovieForm/MovieForm\";\n\nconst Movies = () => {\n    const [searchParams] = useSearchParams();\n    const query = searchParams.get('query') || '';\n    const [searchData, setSearchData] = useState([]);\n    const [search, setSearch] = useState('');\n    \n    const handleSubmit = () => {\n         getSearch(search)\n            .then(data => {\n                setSearchData(data)\n            })\n        console.log(searchData, 'movies');\n    };\n    \n    console.log(query, 'query');\n    \n    useEffect(() => {\n        if (query === '') return;\n        else {\n            return setSearch(query);\n        };\n    }, [query]);\n\n\n    return (\n        <div>\n            <h1>Movie Search</h1>\n            <MovieForm onSubmit={ handleSubmit} />\n            {searchData.map((data) => (\n            \n            <Link to={`./${data.id}`} key={ data.id }><h3>{ data.title}</h3></Link>\n\n            ))}\n        </div>\n    );\n};\n\nexport default Movies;"],"names":["KEY_API","IMAGE_URL","axios","getSearch","query","data","searchMovies","results","console","log","message","onSubmit","useSearchParams","searchParams","setSearchParams","get","nav","useNavigate","e","preventDefault","type","value","onChange","target","useState","searchData","setSearchData","search","setSearch","useEffect","then","map","to","id","title"],"sourceRoot":""}